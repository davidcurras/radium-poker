{"version":3,"sources":["assets/logo.png","redux/reducers/players.js","redux/reducers/profile.js","redux/reducers/room.js","redux/reducers/index.js","redux/store.js","components/layouts/MainLayout/index.js","components/layouts/ContentLayout/index.js","components/screens/Home/index.js","components/screens/Login/index.js","components/screens/Profile/index.js","components/screens/Room/index.js","routes.js","app.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","isLoading","error","list","reducer","state","action","type","data","combineReducers","players","profile","room","createStore","rootReducer","MainLayout","props","id","className","src","logo","alt","to","children","ContentLayout","Home","Component","firebaseApp","firebase","initializeApp","config","Login","isSignedIn","undefined","uiConfig","signInFlow","signInOptions","auth","EmailAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","this","unregisterAuthObserver","onAuthStateChanged","user","setState","firebaseAuth","currentUser","displayName","onClick","signOut","Profile","Room","Routes","exact","path","component","from","App","store","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.a8cfee1a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b6c0f0ab.png\";","const initialState = {\n    isLoading: false,\n    error: '',\n    list: []\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        default:\n            return state\n    }\n}\n\nexport default reducer","const initialState = {\n    isLoading: false,\n    error: '',\n    data: {}\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        default:\n            return state\n    }\n}\n\nexport default reducer","const initialState = {\n    isLoading: false,\n    error: '',\n    data: {}\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        default:\n            return state\n    }\n}\n\nexport default reducer","import { combineReducers } from 'redux'\nimport players from './players'\nimport profile from './profile'\nimport room from './room'\n\nexport default combineReducers({\n    players,\n    profile,\n    room\n})\n","import { createStore } from 'redux'\nimport rootReducer from './reducers'\n\nexport default createStore(rootReducer)","import './style.css'\nimport logo from '../../../assets/logo.png'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction MainLayout(props) {\n    return (\n        <div id=\"MainLayout\">\n            <div className=\"navbar\">\n                <div className=\"controls\">\n                    <img src={logo} alt=\"Logo\" />\n                    <span src=\"title\">Radium Poker</span>\n                    <span className=\"menu\">&#9776;</span>\n                </div>\n                <div className=\"links\">\n                    <ul>\n                        <li><Link to=\"/home\">Lobby</Link></li>\n                        <li className=\"selected\"><Link to=\"/room\">Sala de juego</Link></li>\n                        <li><Link to=\"/profile\">Perfil</Link></li>\n                    </ul>\n                </div>\n                <div className=\"user\">\n                    <img src=\"https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50\" alt=\"img\" />\n                    <ul>\n                        <li>Juan Perez</li>\n                        <li>Mesa 5</li>\n                        <li>$500</li>\n                    </ul>\n                </div>\n            </div>\n            <div className=\"content\">\n                {props.children}\n            </div>\n        </div>\n    )\n}\n\nexport default MainLayout","import './style.css'\nimport React from 'react'\n\nfunction ContentLayout(props) {\n  return (\n    <div id=\"ContentLayout\">\n\n      <div className=\"content\">\n        {props.children}\n      </div>\n    </div>\n  )\n}\n\nexport default ContentLayout","import './style.css'\nimport React, { Component } from 'react'\nimport MainLayout from '../../layouts/MainLayout'\nimport ContentLayout from '../../layouts/ContentLayout'\n\nclass Home extends Component {\n    render() {\n        return (\n            <MainLayout>\n                <ContentLayout>\n                    <h1>Home</h1>\n                </ContentLayout>\n            </MainLayout>\n        )\n    }\n}\n\nexport default Home","import './style.css'\nimport React, { Component } from 'react'\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\nimport firebase from 'firebase'\nimport MainLayout from '../../layouts/MainLayout'\nimport config from '../../../assets/config.json'\n\nconst firebaseApp = firebase.initializeApp(config)\n\nclass Login extends Component {\n\n    state = {\n        isSignedIn: undefined,\n    }\n\n    uiConfig = {\n        signInFlow: 'popup',\n        signInOptions: [\n            // firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n            // firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n            firebase.auth.EmailAuthProvider.PROVIDER_ID,\n        ],\n        callbacks: {\n            signInSuccessWithAuthResult: () => false,\n        },\n    }\n\n    componentDidMount() {\n        this.unregisterAuthObserver = firebaseApp.auth().onAuthStateChanged(\n            user => { this.setState({ isSignedIn: !!user }) }\n        )\n    }\n\n    componentWillUnmount() {\n        this.unregisterAuthObserver()\n    }\n\n    render() {\n        return (\n            <MainLayout>\n                <h1>Login</h1>\n                {this.state.isSignedIn !== undefined && !this.state.isSignedIn &&\n                    <div>\n                        <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebaseApp.auth()} />\n                    </div>\n                }\n                {this.state.isSignedIn &&\n                    <div>\n                        Hello {firebaseApp.auth().currentUser.displayName}. You are now signed In!\n                        <button onClick={() => firebaseApp.auth().signOut()}>Sign-out</button>\n                    </div>\n                }\n            </MainLayout>\n        )\n    }\n}\n\nexport default Login","import './style.css'\nimport React, { Component } from 'react'\nimport MainLayout from '../../layouts/MainLayout'\nimport ContentLayout from '../../layouts/ContentLayout'\n\nclass Profile extends Component {\n    render() {\n        return (\n            <MainLayout>\n                <ContentLayout>\n                    <h1>Profile</h1>\n                </ContentLayout>\n            </MainLayout>\n        )\n    }\n}\n\nexport default Profile","import './style.css'\nimport React, { Component } from 'react'\nimport MainLayout from '../../layouts/MainLayout'\nimport ContentLayout from '../../layouts/ContentLayout'\n\nclass Room extends Component {\n    render() {\n        return (\n            <MainLayout>\n                <ContentLayout>\n                    <div id=\"Room\">\n                        <h1>Room 1</h1>\n                        <div className=\"table\">\n                            <div id=\"Player1\" className=\"player\"></div>\n                            <div id=\"Player2\" className=\"player\"></div>\n                            <div id=\"Player3\" className=\"player\"></div>\n                            <div id=\"Player4\" className=\"player\"></div>\n                            <div id=\"Player5\" className=\"player\"></div>\n                            <div id=\"Player6\" className=\"player\"></div>\n                            <div id=\"Player7\" className=\"player\"></div>\n                            <div id=\"Player8\" className=\"player\"></div>\n                            <div id=\"Player9\" className=\"player\"></div>\n                            <div id=\"Dealer\" className=\"player\"></div>\n                        </div>\n                    </div>\n                </ContentLayout>\n            </MainLayout>\n        )\n    }\n}\n\nexport default Room","import React from 'react'\nimport {\n    BrowserRouter,\n    Switch,\n    Route,\n    Redirect\n} from 'react-router-dom'\nimport Home from './components/screens/Home'\nimport Login from './components/screens/Login'\nimport Profile from './components/screens/Profile'\nimport Room from './components/screens/Room'\n\nfunction Routes() {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route exact path=\"/home\" component={Home} />\n                <Route exact path=\"/login\" component={Login} />\n                <Route exact path=\"/profile\" component={Profile} />\n                <Route exact path=\"/room\" component={Room} />\n                <Redirect from=\"/\" to=\"/home\" />\n            </Switch>\n        </BrowserRouter>\n    )\n}\n\nexport default Routes","import React from 'react'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport Routes from './routes'\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <Routes />\n        </Provider>\n    )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import './reset.css'\nimport './index.css'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app'\nimport * as serviceWorker from './serviceWorker'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}